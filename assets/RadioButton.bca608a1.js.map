{"version":3,"file":"RadioButton.bca608a1.js","sources":["../../src/components/radio/group/RadioButtonGroup.tsx","../../src/components/radio/button/RadioButton.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ntype RadioButtonGroupContextType = [value: string | undefined, disabled: boolean, dispatch: (value: string) => unknown];\n\nexport const RadioButtonGroupContext = React.createContext<RadioButtonGroupContextType>(null!);\n\ninterface RadioButtonGroupProps {\n  disabled?: boolean;\n  value?: string; // For controlled groups\n  defaultValue?: string; // For uncontrolled group\n  onSelection?: (value: string) => unknown;\n  children: React.ReactNode;\n}\n\nconst RadioButtonGroup: React.FC<RadioButtonGroupProps> = ({\n  defaultValue,\n  disabled,\n  onSelection,\n  value,\n  children,\n}) => {\n  const [controlledValue, setControlledValue] = useState(defaultValue);\n\n  const dispatcher = (value: string) => {\n    setControlledValue(value);\n    onSelection?.(value);\n  };\n\n  return (\n    <div>\n      <RadioButtonGroupContext.Provider value={[value ?? controlledValue, disabled ?? false, dispatcher]}>\n        {children}\n      </RadioButtonGroupContext.Provider>\n    </div>\n  );\n};\n\nexport default RadioButtonGroup;\n","import styles from \"./RadioButton.module.scss\";\nimport { useContext, useState } from \"react\";\nimport { RadioButtonGroupContext } from \"../group/RadioButtonGroup\";\n\ninterface RadioButtonProps {\n  disabled?: boolean;\n  value: string;\n  onClick?: React.HTMLAttributes<HTMLInputElement>[\"onChange\"];\n  label: string;\n  checked?: boolean;\n}\n\nconst RadioButton: React.FC<RadioButtonProps> = ({ onClick, checked, disabled, label, value }) => {\n  const parentGroupContext = useContext(RadioButtonGroupContext);\n\n  const localOnClick: React.FormEventHandler<HTMLInputElement> = (event) => {\n    onClick?.(event);\n    parentGroupContext?.[2](value);\n  }\n\n  return (\n    <>\n      <label className={styles.containerLabel}>\n        <input\n          className={styles.radioButton}\n          type=\"radio\"\n          value={value}\n          checked={parentGroupContext ? parentGroupContext[0] === value : checked}\n          disabled={parentGroupContext?.[1] ?? disabled}\n          onClick={localOnClick}\n        />\n        {label}\n      </label>\n    </>\n  );\n};\n\nexport default RadioButton;\n"],"names":["RadioButtonGroupContext","React","RadioButtonGroup","__name","defaultValue","disabled","onSelection","value","controlledValue","setControlledValue","useState","dispatcher","value2","_jsx","children","RadioButtonGroup$1","RadioButton","onClick","checked","label","parentGroupContext","useContext","localOnClick","event","_Fragment","_jsxs","styles","containerLabel","radioButton","RadioButton$1"],"mappings":"uPAIOA,EAAAC,EAAA,cAAA,IAAA,EAUPC,EAAAC,EAAA,CAAA,CAA2D,aAAAC,EACzDA,SAAAA,EACAC,YAAAA,EACAC,MAAAA,EACAC,SAAAA,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAAN,CAAA,EAEAO,EAAAR,EAAAS,GAAA,CACEH,EAAAA,CAAAA,EACAH,GAAAA,MAAAA,EAAAA,EAAmB,EAFrB,cAKA,OAAAO,EAAA,MAAA,CACE,SAAAA,EAAAb,EAAA,SAAA,CACmC,MAAA,CAAAO,GAAA,KAAAA,EAAAC,EAAAH,GAAA,KAAAA,EAAA,GAAAM,CAAA,EAAgE,SAAAG,CAAEA,CAAAA,CACxF,CAAA,CAIjB,EArBA,oBAuBAC,EAAAb,swBCzBA,MAAAc,EAAAb,EAAA,CAAA,CAAiD,QAAAc,EAAEA,QAAAA,EAASC,SAAAA,EAASb,MAAAA,EAAUc,MAAAA,CAAa,IAAA,OAC1F,MAAAC,EAAAC,qBAAArB,CAAA,EAEAsB,EAAAnB,EAAAoB,GAAA,CACEN,GAAAA,MAAAA,EAAAA,GACAG,GAAAA,MAAAA,EAAAA,GAAAA,EAA6B,EAF/B,gBAKA,OAAAP,EAAAW,EAAA,CACE,SAAAC,EAAA,QAAA,CACE,UAAAC,EAAA,eAAyBC,SAAAA,CAAAA,EAAAA,QAAAA,CACvB,UAAAD,EAAA,YACoBE,KAAAA,QACb,MAAArB,EACLA,QAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EACgEW,UAAAA,EAAAA,GAAAA,YAAAA,EAAAA,KAAAA,KAAAA,EAAAA,EAC3Bb,QAAAA,CAC5BiB,CAAAA,EAAAA,CAAAA,CAEL,CAAA,CAAA,CAAA,CAId,EAvBA,eAyBAO,EAAAb"}